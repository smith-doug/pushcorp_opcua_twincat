<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.9">
  <POU Name="MAIN" Id="{bb3d809b-8210-48bb-b6ff-5936a2936436}" SpecialFunc="None">
    <Declaration><![CDATA[PROGRAM MAIN
VAR
	fbSpindle	: FB_Spindle;
	fbFcu	: FB_FCU;
	fbMotoman	: FB_Motoman;
	
	
	spin: REFERENCE TO ST_SpindleControl;
	fcu: REFERENCE TO ST_FcuControl;
	
	motoman	: REFERENCE TO ST_MotomanCtrl;
	motomanErr: BOOL;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[//prgMotoman();

// Set ref vars for convenience of shorter names 
spin REF= GVL_opcua.stSpindleControl;
fcu REF=GVL_opcua.stFcuControl;
motoman REF= GVL_opcua.stMotomanControl;

//************* This section for tuesday demo

spin.input.SetVelo := 1000;
spin.input.Execute := GVL_io.DI_0;
spin.status.input.Heartbeat := NOT spin.status.input.Heartbeat; 

fcu.input.SetControlMode := E_FCU_ControlMode.Force;
fcu.input.WeighPayloadNow := gvl_io.DI_1;
fcu.input.SetForce := -90;

fcu.status.input.Heartbeat := NOT fcu.status.input.Heartbeat;

//**************

// Monitor opcua heartbeat data in a Method for convenience.  This can be easily ignored if calling the FB without opcua 
fbSpindle.OpcuaMonitor(OpcuaData:= spin, Error=> );
fbSpindle(
	Enable:= spin.input.Execute, 
	SetVelo:= spin.input.SetVelo, 
	data:= GVL_io.Spindle_Full, 
	ActVelo=> spin.output.ActVelo, 
	Ready=> spin.output.Ready, 
	Error=> spin.output.Error);


fbFcu.OpcuaMonitor(OpcuaData:= fcu, Error=> );
fbFcu(
	SetForce:= fcu.input.SetForce, 
	SetPosition:= fcu.input.SetPosition, 
	SetWeight:= fcu.input.SetWeight, 
	SetControlMode:= fcu.input.SetControlMode, 
	WeightPayload:= fcu.input.WeighPayloadNow, 
	data:= gvl_io.FCU_Full, 
	ActForce=> fcu.output.ActForce, 
	ActPos=> fcu.output.ActPos, 
	ActWeight=> fcu.output.ActWeight,
	Contact=> fcu.output.Contact,
	WeightValid=> fcu.output.WeightValid, 
	Error=> fcu.output.Error);
	
fbMotoman.OpcuaMonitor(OpcuaData:= GVL_opcua.stMotomanControl, Error=> motomanErr);
fbMotoman(
	EnableJoystick:= NOT motomanErr, 
	Value_1:= motoman.input.Value_1, 
	Value_2:= motoman.input.Value_2, 
	Value_3:= motoman.input.Value_3, 
	Value_4:= , 
	Value_5:= , 
	Value_6:= , 
	data:= GVL_io.Motoman_Full, 
	Error=> );
	
// DI0 := DO0, for testing
GVL_io.DO_0 := GVL_opcua.stTestBasic.input.DO0;
GVL_opcua.stTestBasic.output.DI0 := GVL_io.DI_0;]]></ST>
    </Implementation>
    <LineIds Name="MAIN">
      <LineId Id="85" Count="0" />
      <LineId Id="88" Count="0" />
      <LineId Id="62" Count="1" />
      <LineId Id="57" Count="0" />
      <LineId Id="101" Count="0" />
      <LineId Id="128" Count="0" />
      <LineId Id="127" Count="0" />
      <LineId Id="131" Count="0" />
      <LineId Id="130" Count="0" />
      <LineId Id="132" Count="0" />
      <LineId Id="153" Count="0" />
      <LineId Id="134" Count="0" />
      <LineId Id="133" Count="0" />
      <LineId Id="135" Count="1" />
      <LineId Id="151" Count="0" />
      <LineId Id="150" Count="0" />
      <LineId Id="152" Count="0" />
      <LineId Id="129" Count="0" />
      <LineId Id="53" Count="1" />
      <LineId Id="52" Count="0" />
      <LineId Id="17" Count="7" />
      <LineId Id="55" Count="0" />
      <LineId Id="25" Count="9" />
      <LineId Id="73" Count="0" />
      <LineId Id="35" Count="1" />
      <LineId Id="15" Count="0" />
      <LineId Id="102" Count="0" />
      <LineId Id="113" Count="0" />
      <LineId Id="104" Count="8" />
      <LineId Id="103" Count="0" />
      <LineId Id="58" Count="1" />
      <LineId Id="61" Count="0" />
      <LineId Id="60" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>